plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "http://repo.typesafe.com/typesafe/repo" }
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    compile 'org.apache.poi:poi:3.17'
    compile 'org.apache.poi:poi-ooxml:3.17'

    testCompile("org.mockito:mockito-core:2.25.0")
    testCompile("junit:junit:4.12")
}

group = 'org.excelutil'
version = '2.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.setEncoding("UTF-8")
compileTestJava.options.setEncoding("UTF-8")

//  <editor-fold desc="   codecov ">

jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/report.xml")
        html.enabled false
    }
    executionData = files('build/jacoco/test.exec')
}

test {
    ignoreFailures  = true
    finalizedBy jacocoTestReport
}

/// </editor-fold>

//  <editor-fold desc="   Maven Publish  Local ">
//  https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven:install

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc {
        failOnError = false
    }
    archiveClassifier = 'javadoc'
}
publishing {
    publications {
        maven(MavenPublication) {
            artifactId = "excel-util"
            from components.java
            //  jar's base name
//            afterEvaluate {
//                println "jar.archiveBaseName:" + jar.archiveBaseName
//                artifactId = jar.archiveBaseName
//            }
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        mavenLocal()
    }
}

/// </editor-fold>